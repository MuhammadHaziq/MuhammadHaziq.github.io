name: Deploy Next.js site to Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Replace dynamic email placeholders
        run: |
          # Replace email placeholder with actual email from repository variables
          EMAIL="${{ vars.CONTACT_EMAIL || 'muhammadhaziq341@gmail.com' }}"
          
          echo "Using email: $EMAIL"
          echo "Repository variable CONTACT_EMAIL: ${{ vars.CONTACT_EMAIL }}"
          
          # Check if files exist before replacement
          if [ -f "README.md" ]; then
            echo "README.md exists, replacing placeholders..."
            sed -i "s/DYNAMIC_EMAIL_PLACEHOLDER/$EMAIL/g" README.md
            echo "README.md after replacement:"
            grep -n "DYNAMIC_EMAIL_PLACEHOLDER\|$EMAIL" README.md || echo "No email found in README.md"
          else
            echo "README.md not found!"
          fi
          
          if [ -f "components/contact.tsx" ]; then
            echo "contact.tsx exists, replacing placeholders..."
            sed -i "s/DYNAMIC_EMAIL_PLACEHOLDER/$EMAIL/g" components/contact.tsx
            echo "contact.tsx after replacement:"
            grep -n "DYNAMIC_EMAIL_PLACEHOLDER\|$EMAIL" components/contact.tsx || echo "No email found in contact.tsx"
          else
            echo "components/contact.tsx not found!"
          fi

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f yarn.lock ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
          else
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**/*.[jt]s','**/*.[jt]sx') }}
          restore-keys: ${{ runner.os }}-nextjs-

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build

      - name: Add .nojekyll file
        run: touch ./out/.nojekyll

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
